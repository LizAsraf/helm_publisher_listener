apiVersion: apps/v1
kind: Deployment
metadata:
  name: "gke-cloud-sql-{{ include "service_a.fullname" . }}"
spec:
  selector:
    matchLabels:
      app: "gke-cloud-sql-{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app: "gke-cloud-sql-{{ .Release.Name }}"
    spec:
      serviceAccountName: {{ include "service_a.serviceAccountName" . }}
      volumes:
      - name: kubernetes-service-account
        secret:
          secretName: kubernetes-service-account
      containers:
      - name: "gke-cloud-sql-{{ .Release.Name }}-proxy"
        # This uses the latest version of the Cloud SQL proxy
        # It is recommended to use a specific version for production environments.
        # See: https://github.com/GoogleCloudPlatform/cloudsql-proxy 
        image: gcr.io/cloudsql-docker/gce-proxy:latest
        command:
          - "/cloud_sql_proxy"
          - "-ip_address_types=PRIVATE"

          # If connecting from a VPC-native GKE cluster, you can use the
          # following flag to have the proxy connect over private IP

          # tcp should be set to the port the proxy should listen on
          # and should match the DB_PORT value set above.
          # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
          - "-instances={{.Values.projectId}}:{{.Values.region}}:{{.Values.instance_name}}=tcp:5432"
        securityContext:
          # The default Cloud SQL proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
# [END cloud_sql_postgres_sqlalchemy_gke_quickstart_deployment]